version: '3.8'
volumes:
  mongo-data: { }
  redis-data: { }
  typesense-data: { }

networks:
  jikan_network: { }

services:

  mongodb:
    image: mongo:5.0
    hostname: mongodb
    volumes:
      - mongo-data:/data/db
      # - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - 27017/tcp
    command: "--wiredTigerCacheSizeGB ${MONGO_CACHE_SIZE_GB:-1.0}"
    networks:
      - jikan_network
    environment:
      MONGO_INITDB_DATABASE: jikan
      MONGO_INITDB_ROOT_USERNAME: jikan
      MONGO_INITDB_ROOT_PASSWORD: jikan
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://localhost:27017 --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: docker.io/redis:6-alpine
    hostname: redis
    networks:
      - jikan_network
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "jikan"
    volumes:
      - redis-data:/data:rw
    ports:
      - '6379/tcp'
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 500ms
      timeout: 1s

  typesense:
    image: docker.io/typesense/typesense:0.24.1
    hostname: typesense
    entrypoint: /bin/sh
    networks:
      - jikan_network
    command:
      - -c
      - TYPESENSE_API_KEY="jikan" /opt/typesense-server --data-dir /data
    deploy:
      restart_policy:
        condition: none
    volumes:
      - typesense-data:/data
    ports:
      - "8108/tcp"
    healthcheck:
      test: [ 'CMD-SHELL', '{ ! [ -f "curl_created" ] && apt -qq update -y && apt -qq install -y curl && touch curl_created && curl -s -f http://localhost:8108/health; } || { curl -s -f http://localhost:8108/health; }' ]
      interval: 5s
      timeout: 2s
